{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","components/Loader/Loader.jsx","pages/Homepage/HomePage.jsx","pages/NotFoundPage/NotFoundPage.jsx","pages/PostDetailsPage/PostDetailsPage.jsx","App.jsx","index.js"],"names":["BASE_URL","myHeaders","Headers","append","getAllPosts","url","fetch","then","response","ok","json","Error","catch","addPost","post","a","requestOptions","method","headers","body","JSON","stringify","redirect","deletePost","postId","PostsList","posts","onPostDelete","className","scope","map","id","title","to","type","onClick","Loader","HomePage","useState","setPosts","isLoading","switchLoadingStatus","newPostTitle","setPostTitle","newPostBody","setPostBody","isPostListChanged","switchPostListStatus","useEffect","onPostAdd","event","preventDefault","newPost","onSubmit","placeholder","value","onChange","target","required","NotFoundPage","PostDetailsPage","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAAaA,G,MAAW,oCCElBC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,eAAgB,oBAE1B,IAAMC,EAAc,kBDHJC,ECGkB,SDHXC,MAAM,GAAD,OAAIN,GAAJ,OAAeK,IAC/CE,MAAK,SAACC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAGlB,MAAM,IAAIC,MAAM,aCFjBC,OAAM,iBAAM,MDJQ,IAAAP,GCMVQ,EAAO,uCAAG,WAAMC,GAAN,eAAAC,EAAA,6DACfC,EAAiB,CACrBC,OAAQ,OACRC,QAASjB,EACTkB,KAAMC,KAAKC,UAAUP,GACrBQ,SAAU,UALS,SAQfhB,MAAM,GAAD,OAAIN,EAAJ,UAAsBgB,GARZ,2CAAH,sDAWPO,EAAU,uCAAG,WAAMC,GAAN,eAAAT,EAAA,6DAClBC,EAAiB,CACrBC,OAAQ,UAFc,SAKlBX,MAAM,GAAD,OAAIN,EAAJ,kBAAsBwB,GAAUR,GALnB,2CAAH,sD,cChBVS,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,aAAV,OACvB,gCACE,2CACA,wBAAOC,UAAU,QAAjB,UACE,gCACE,qBAAIA,UAAU,aAAd,UACE,oBAAIC,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,8BAGJ,gCACGH,EAAMI,KAAI,SAAAhB,GAAI,OACb,qBAAkBc,UAAU,cAA5B,UACE,oBAAIC,MAAM,MAAV,SAAiBf,EAAKiB,KACtB,6BAAKjB,EAAKkB,QACV,6BACE,cAAC,IAAD,CAASJ,UAAU,kBAAkBK,GAAE,wBAAmBnB,EAAKiB,IAA/D,uBAIF,6BACE,wBACEG,KAAK,SACLN,UAAU,iBACVK,GAAG,wBACHE,QAAS,kBAAMR,EAAab,EAAKiB,KAJnC,wBATKjB,EAAKiB,gBCdXK,G,MAAS,kBACpB,qBAAKR,UAAU,SAAf,SACE,qBAAKA,UAAU,wBCCNS,EAAW,WACtB,MAA0BC,mBAAS,IAAnC,mBAAOZ,EAAP,KAAca,EAAd,KACA,EAAyCD,oBAAS,GAAlD,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAqCH,mBAAS,IAA9C,mBAAOI,EAAP,KAAqBC,EAArB,KACA,EAAmCL,mBAAS,IAA5C,mBAAOM,EAAP,KAAoBC,EAApB,KACA,EAAkDP,oBAAS,GAA3D,mBAAOQ,EAAP,KAA0BC,EAA1B,KAEAC,qBAAU,WACRP,GAAoB,GACpBrC,IAAcG,MAAK,SAAAmB,GACjBa,EAASb,GACTe,GAAoB,QAErB,CAACK,IAEJ,IAAMG,EAAS,uCAAG,WAAMC,GAAN,eAAAnC,EAAA,6DAChBmC,EAAMC,iBAEAC,EAAU,CACdpB,MAAOU,EACPvB,KAAMyB,GALQ,SAQV/B,EAAQuC,GARE,OAShBL,GAAsBD,GACtBH,EAAa,IACbE,EAAY,IAXI,2CAAH,sDAcTlB,EAAY,uCAAG,WAAMH,GAAN,SAAAT,EAAA,sEACbQ,EAAWC,GADE,OAEnBuB,GAAsBD,GAFH,2CAAH,sDAKlB,OACE,sBAAKlB,UAAU,WAAf,UACE,uBAAMyB,SAAU,SAAAH,GAAK,OAAID,EAAUC,IAAnC,UACE,6CACA,sBAAKtB,UAAU,mBAAf,UACE,uBAAOA,UAAU,mBAAmBG,GAAG,eAAvC,mBACA,uBACEG,KAAK,OACLN,UAAU,eACV0B,YAAY,gBACZC,MAAOb,EACPc,SAAU,SAAAN,GAAK,OAAIP,EAAaO,EAAMO,OAAOF,QAC7CG,UAAQ,OAGZ,sBAAK9B,UAAU,cAAf,UACE,uBAAOA,UAAU,mBAAjB,kBACA,0BACEA,UAAU,eACV0B,YAAY,gBACZC,MAAOX,EACPY,SAAU,SAAAN,GAAK,OAAIL,EAAYK,EAAMO,OAAOF,QAC5CG,UAAQ,OAGZ,wBAAQ9B,UAAU,kBAAlB,uBAKAY,EACI,cAAC,EAAD,IAEA,cAAC,EAAD,CACEd,MAAOA,EACPC,aAAcA,QC3EfgC,EAAe,kBAC1B,iDCCWC,EAAkB,kBAC7B,gCACE,uCACA,cAAC,IAAD,CAAShC,UAAU,kBAAkBK,GAAG,IAAxC,gCCCS4B,EAAM,kBACjB,qBAAKjC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkC,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,wBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAUA,KAAK,QAAQ7B,GAAG,MAE1B,cAAC,EAAD,UCZN+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.69cf737b.chunk.js","sourcesContent":["export const BASE_URL = 'https://bloggy-api.herokuapp.com';\n\nexport const getData = url => fetch(`${BASE_URL}${url}`)\n  .then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    throw new Error('Error');\n  })\n","import { getData, BASE_URL } from './api';\r\n\r\nconst myHeaders = new Headers();\r\nmyHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\nexport const getAllPosts = () => getData('/posts')\r\n  .catch(() => []);\r\n\r\nexport const addPost = async(post) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: myHeaders,\r\n    body: JSON.stringify(post),\r\n    redirect: 'follow'\r\n  };\r\n\r\n  await fetch(`${BASE_URL}/posts`, requestOptions);\r\n};\r\n\r\nexport const deletePost = async(postId) => {\r\n  const requestOptions = {\r\n    method: 'DELETE',\r\n  };\r\n\r\n  await fetch(`${BASE_URL}/posts/${postId}`, requestOptions);\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const PostsList = ({ posts, onPostDelete }) => (\r\n  <div>\r\n    <h2>Post List</h2>\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr className=\"table-dark\">\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Post</th>\r\n          <th scope=\"col\">Go to</th>\r\n          <th scope=\"col\">Delete post</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {posts.map(post => (\r\n          <tr key={post.id} className=\"table-light\">\r\n            <th scope=\"row\">{post.id}</th>\r\n            <td>{post.title}</td>\r\n            <td>\r\n              <NavLink className=\"btn btn-primary\" to={`/post-details/${post.id}`}>\r\n                Details\r\n              </NavLink>\r\n            </td>\r\n            <td>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                to=\"/post-details/:postId\"\r\n                onClick={() => onPostDelete(post.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n);\r\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport './Homepage.css';\nimport { getAllPosts, addPost, deletePost } from '../../api/posts';\nimport { PostsList } from '../../components/PostsList';\nimport { Loader } from '../../components/Loader';\n\nexport const HomePage = () => {\n  const [posts, setPosts] = useState([]);\n  const [isLoading, switchLoadingStatus] = useState(false);\n  const [newPostTitle, setPostTitle] = useState('');\n  const [newPostBody, setPostBody] = useState('');\n  const [isPostListChanged, switchPostListStatus] = useState(false)\n\n  useEffect(() => {\n    switchLoadingStatus(true);\n    getAllPosts().then(posts => {\n      setPosts(posts)\n      switchLoadingStatus(false);\n    });\n  }, [isPostListChanged]);\n\n  const onPostAdd = async(event) => {\n    event.preventDefault();\n\n    const newPost = {\n      title: newPostTitle,\n      body: newPostBody\n    };\n\n    await addPost(newPost);\n    switchPostListStatus(!isPostListChanged);\n    setPostTitle('');\n    setPostBody('');\n  }\n\n  const onPostDelete = async(postId) => {\n    await deletePost(postId);\n    switchPostListStatus(!isPostListChanged);\n  }\n\n  return (\n    <div className=\"homepage\">\n      <form onSubmit={event => onPostAdd(event)}>\n        <h2>Create Post</h2>\n        <div className=\"input-group mb-3\">\n          <label className=\"input-group-text\" id=\"basic-addon2\">title</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Write here...\"\n            value={newPostTitle}\n            onChange={event => setPostTitle(event.target.value)}\n            required\n          />\n        </div>\n        <div className=\"input-group\">\n          <label className=\"input-group-text\">body</label>\n          <textarea\n            className=\"form-control\"\n            placeholder=\"Write here...\"\n            value={newPostBody}\n            onChange={event => setPostBody(event.target.value)}\n            required\n          ></textarea>\n        </div>\n        <button className=\"btn btn-success\">\n          Create\n        </button>\n      </form>\n      {\n        isLoading\n          ? <Loader />\n          : (\n            <PostsList\n              posts={posts}\n              onPostDelete={onPostDelete}\n            />\n          )\n      }\n    </div>\n  );\n}\n","export const NotFoundPage = () => (\n  <h1>Page Not Found</h1>\n);\n","import { NavLink } from 'react-router-dom';\n\nexport const PostDetailsPage = () => (\n  <div>\n    <h1>Hello</h1>\n    <NavLink className=\"btn btn-primary\" to=\"/\">\n      Go to Homepage\n    </NavLink>\n  </div>\n);\n","import './App.css';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { HomePage } from './pages/Homepage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PostDetailsPage } from './pages/PostDetailsPage';\n\nexport const App = () => (\n  <div className=\"App\">\n    <Switch>\n      <Route path=\"/\" exact>\n        <HomePage />\n      </Route>\n      <Route path=\"/post-details/:postId\">\n        <PostDetailsPage />\n      </Route>\n      <Redirect path=\"/home\" to=\"/\" />\n\n      <NotFoundPage />\n    </Switch>\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}