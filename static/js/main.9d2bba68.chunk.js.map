{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","components/Loader/Loader.jsx","components/UpdateForm/UpdateForm.jsx","pages/Homepage/HomePage.jsx","pages/NotFoundPage/NotFoundPage.jsx","components/PostDetails/PostDetails.jsx","pages/PostDetailsPage/PostDetailsPage.jsx","App.jsx","index.js"],"names":["BASE_URL","myHeaders","Headers","append","getAllPosts","url","fetch","then","response","ok","json","Error","catch","addPost","post","a","requestOptions","method","headers","body","JSON","stringify","redirect","deletePost","postId","PostsList","posts","onPostDelete","className","scope","map","id","title","to","type","onClick","Loader","UpdateForm","formPurpose","onSubmit","useState","newPostTitle","setPostTitle","newPostBody","setPostBody","event","placeholder","value","onChange","target","required","HomePage","setPosts","isLoading","switchLoadingStatus","isPostListChanged","switchPostListStatus","useEffect","onPostAdd","preventDefault","newPost","NotFoundPage","PostDetails","PostDetailsPage","withRouter","match","currentPost","setCurrentPost","shouldUpdate","switchShouldUpdateStatus","currentPostId","Number","params","relevantPost","find","role","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d2bba68.chunk.js","sourcesContent":["export const BASE_URL = 'https://bloggy-api.herokuapp.com';\n\nexport const getData = url => fetch(`${BASE_URL}${url}`)\n  .then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    throw new Error('Error');\n  })\n","import { getData, BASE_URL } from './api';\r\n\r\nconst myHeaders = new Headers();\r\nmyHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\nexport const getAllPosts = () => getData('/posts')\r\n  .catch(() => []);\r\n\r\nexport const addPost = async(post) => {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: myHeaders,\r\n    body: JSON.stringify(post),\r\n    redirect: 'follow'\r\n  };\r\n\r\n  await fetch(`${BASE_URL}/posts`, requestOptions);\r\n};\r\n\r\nexport const deletePost = async(postId) => {\r\n  const requestOptions = {\r\n    method: 'DELETE',\r\n  };\r\n\r\n  await fetch(`${BASE_URL}/posts/${postId}`, requestOptions);\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const PostsList = ({ posts, onPostDelete }) => (\r\n  <div>\r\n    <h2>Post List</h2>\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr className=\"table-dark\">\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Post</th>\r\n          <th scope=\"col\">Go to</th>\r\n          <th scope=\"col\">Delete post</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {posts.map((post) => (\r\n          <tr key={post.id} className=\"table-light\">\r\n            <th scope=\"row\">{post.id}</th>\r\n            <td>{post.title}</td>\r\n            <td>\r\n              <NavLink className=\"btn btn-primary\" to={`/post-details/${post.id}`}>\r\n                Details\r\n              </NavLink>\r\n            </td>\r\n            <td>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                to=\"/post-details/:postId\"\r\n                onClick={() => onPostDelete(post.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n);\r\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState } from 'react';\r\n\r\nexport const UpdateForm = ({ formPurpose, onSubmit }) => {\r\n  const [newPostTitle, setPostTitle] = useState('');\r\n  const [newPostBody, setPostBody] = useState('');\r\n\r\n  return (\r\n    <form onSubmit={(event) => {\r\n        onSubmit(event, newPostTitle, newPostBody);\r\n        setPostTitle('');\r\n        setPostBody('');\r\n    }}>\r\n      <h2>{`${formPurpose} Post`}</h2>\r\n      <div className=\"input-group mb-3\">\r\n        <label className=\"input-group-text\" id=\"basic-addon2\">title</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Write here...\"\r\n          value={newPostTitle}\r\n          onChange={event => setPostTitle(event.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"input-group\">\r\n        <label className=\"input-group-text\">body</label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          placeholder=\"Write here...\"\r\n          value={newPostBody}\r\n          onChange={event => setPostBody(event.target.value)}\r\n          required\r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-success\">\r\n        {formPurpose}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\nimport './Homepage.css';\nimport { getAllPosts, addPost, deletePost } from '../../api/posts';\nimport { PostsList } from '../../components/PostsList';\nimport { Loader } from '../../components/Loader';\nimport { UpdateForm } from '../../components/UpdateForm';\n\nexport const HomePage = () => {\n  const [posts, setPosts] = useState([]);\n  const [isLoading, switchLoadingStatus] = useState(false);\n  const [isPostListChanged, switchPostListStatus] = useState(false)\n\n  useEffect(() => {\n    switchLoadingStatus(true);\n    getAllPosts().then(posts => {\n      setPosts(posts)\n      switchLoadingStatus(false);\n    });\n  }, [isPostListChanged]);\n\n  const onPostAdd = async(event, title, body) => {\n    event.preventDefault();\n\n    const newPost = {\n      title,\n      body\n    };\n\n    await addPost(newPost);\n    switchPostListStatus(!isPostListChanged);\n  }\n\n  const onPostDelete = async(postId) => {\n    await deletePost(postId);\n    switchPostListStatus(!isPostListChanged);\n  }\n\n  return (\n    <div className=\"homepage\">\n      <UpdateForm onSubmit={onPostAdd} formPurpose=\"Create\" />\n      {\n        isLoading\n          ? <Loader />\n          : (\n            <PostsList\n              posts={posts}\n              onPostDelete={onPostDelete}\n            />\n          )\n      }\n    </div>\n  );\n}\n","export const NotFoundPage = () => (\n  <h1>Page Not Found</h1>\n);\n","import React from 'react';\r\n\r\nexport const PostDetails = ({ post }) => (\r\n  <div className=\"card text-white bg-secondary mb-3\">\r\n    <div className=\"card-header\">{`#${post.id} Post Details`}</div>\r\n    <div className=\"card-body\">\r\n      <h5 className=\"card-title\">{post.title}</h5>\r\n      <p className=\"card-text\">{post.body}</p>\r\n    </div>\r\n  </div>\r\n);\r\n","import { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport './PostDetailsPage.css'\nimport { getAllPosts } from '../../api/posts';\nimport { Loader } from '../../components/Loader';\nimport { PostDetails } from '../../components/PostDetails';\nimport { UpdateForm } from '../../components/UpdateForm';\n\nexport const PostDetailsPage = withRouter(\n  ({ match }) => {\n    const [currentPost, setCurrentPost] = useState(null);\n    const [shouldUpdate, switchShouldUpdateStatus] = useState(false)\n    const currentPostId = Number(match.params.postId);\n\n    useEffect(() => {\n      getAllPosts().then(posts => {\n        const relevantPost = posts.find(post => post.id === currentPostId);\n        setCurrentPost(relevantPost)\n      });\n    }, [currentPostId])\n\n    return currentPost === null ? <Loader /> : (\n      <div className=\"post-details\">\n        <PostDetails post={currentPost} />\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic mixed styles example\">\n          <NavLink className=\"btn btn-primary\" to=\"/\">\n            Go to Homepage\n          </NavLink>\n          <button\n            type=\"button\"\n            className=\"btn btn-warning\"\n            onClick={() => switchShouldUpdateStatus(!shouldUpdate)}\n          >\n            Update post\n          </button>\n          <button type=\"button\" className=\"btn btn-success\">Open comments</button>\n        </div>\n        {shouldUpdate && <UpdateForm formPurpose=\"Update\" />}\n      </div>\n    );\n  }\n);\n","import './App.css';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { HomePage } from './pages/Homepage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PostDetailsPage } from './pages/PostDetailsPage';\n\nexport const App = () => (\n  <div className=\"App\">\n    <Switch>\n      <Route path=\"/\" exact>\n        <HomePage />\n      </Route>\n      <Route path=\"/post-details/:postId\">\n        <PostDetailsPage />\n      </Route>\n      <Redirect path=\"/home\" to=\"/\" />\n\n      <NotFoundPage />\n    </Switch>\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}